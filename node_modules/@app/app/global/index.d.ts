import { Static } from '@sinclair/typebox'
import { Filter, OrderByDefinition } from 'core/db/dbQueryTypes'
import {
  AppPermissionRequirementsSchema,
  FindAppsOptions,
  UgcApp,
  UgcAppPatch,
} from 'services/ugc-runner/runtime/runtimeTypes'

interface CqlSelectQuery {
  from: CqlFrom
  select: CqlSelect
  distinct?: boolean
  where?: CqlWhere
  having?: CqlHaving
  order?: CqlOrder
  group?: CqlGroup
  limit?: number
  offset?: number
}
declare type CqlFrom = CqlTable | CqlSubQuery
declare type CqlTable = {
  kind: 'table'
  schema: string
  name: string
}
declare type CqlSubQuery = {
  kind: 'sub'
  query: CqlSelectQuery
}
declare type CqlSelect = Record<string, CqlExpr> | undefined
declare type CqlExpr = CqlPlainColumn | CqlExprFn | CqlDynParam | CqlJsonPath | CqlAsterisk
declare type CqlPlainColumn = {
  kind: 'col'
  name: string
  type?: CqlFieldType
}
declare type CqlExprFn = {
  kind: 'fn'
  fn: string
  args: CqlExpr[]
  distinct?: boolean
  type?: CqlFieldType
}
declare type CqlDynParam = {
  kind: 'dyn'
  value: unknown
  type?: CqlFieldType
}
declare type CqlJsonPath = {
  kind: 'json'
  path: CqlDeepPath
  type: CqlFieldType
}
declare type CqlAsterisk = {
  kind: '*'
  type?: undefined
}
declare type CqlFieldType = 'string' | 'number' | 'boolean' | 'date' | 'json'
declare type CqlDeepPath = [string, ...(string | number)[]]
declare type CqlGroup = CqlSelectAlias[]
declare type CqlSelectAlias = string
declare type CqlWhere = Filter<any>
declare type CqlHaving = Filter<any>
declare type CqlOrder = OrderByDefinition<any>
declare type AppPermissionRequirements = Static<typeof appPermissionRequirementsSchema>
declare const appPermissionRequirementsSchema: import('@sinclair/typebox').TObject<{
  accountApps: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            install: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            uninstall: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  globalApps: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            syncPermissions: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  accountDomains: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      (
        | import('@sinclair/typebox').TLiteral<'read'>
        | import('@sinclair/typebox').TLiteral<'read-optional'>
        | import('@sinclair/typebox').TLiteral<'write'>
        | import('@sinclair/typebox').TLiteral<'write-or-read'>
        | import('@sinclair/typebox').TLiteral<'write-optional'>
      )[]
    >
  >
  accountHeap: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            tablesList: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
            tableByName: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
            tableRows: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            tableFile: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  accountJobs: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            asap: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            scheduled: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  accountSettings: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            title: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            image: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            lang: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            createdAt: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  authenticate: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            Phone: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            Email: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            TelegramId: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  feed: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      (
        | import('@sinclair/typebox').TLiteral<'read'>
        | import('@sinclair/typebox').TLiteral<'read-optional'>
        | import('@sinclair/typebox').TLiteral<'write'>
        | import('@sinclair/typebox').TLiteral<'write-or-read'>
        | import('@sinclair/typebox').TLiteral<'write-optional'>
      )[]
    >
  >
  hook: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[],
        import('@sinclair/typebox').TObject<
          {
            handlerInfo: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
          }
        >,
      ]
    >
  >
  i18n: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[],
        import('@sinclair/typebox').TObject<
          {
            getSupportedTranslationLangs: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
              >
            >
          }
        >,
      ]
    >
  >
  user: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            createBotUser: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            accountRole: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            username: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            lang: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            identities: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                [
                  ...(
                    | import('@sinclair/typebox').TLiteral<'read'>
                    | import('@sinclair/typebox').TLiteral<'read-optional'>
                    | import('@sinclair/typebox').TLiteral<'write'>
                    | import('@sinclair/typebox').TLiteral<'write-or-read'>
                    | import('@sinclair/typebox').TLiteral<'write-optional'>
                  )[],
                  import('@sinclair/typebox').TObject<
                    {
                      Phone: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                      Email: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                      TelegramId: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                    } & {
                      all: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                    }
                  >,
                ]
              >
            >
            name: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                [
                  ...(
                    | import('@sinclair/typebox').TLiteral<'read'>
                    | import('@sinclair/typebox').TLiteral<'read-optional'>
                    | import('@sinclair/typebox').TLiteral<'write'>
                    | import('@sinclair/typebox').TLiteral<'write-or-read'>
                    | import('@sinclair/typebox').TLiteral<'write-optional'>
                  )[],
                  import('@sinclair/typebox').TObject<
                    {
                      firstName: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                      middleName: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                      lastName: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                    } & {
                      all: import('@sinclair/typebox').TOptional<
                        import('@sinclair/typebox').TUnion<
                          (
                            | import('@sinclair/typebox').TLiteral<'read'>
                            | import('@sinclair/typebox').TLiteral<'read-optional'>
                            | import('@sinclair/typebox').TLiteral<'write'>
                            | import('@sinclair/typebox').TLiteral<'write-or-read'>
                            | import('@sinclair/typebox').TLiteral<'write-optional'>
                          )[]
                        >
                      >
                    }
                  >,
                ]
              >
            >
            gender: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            birthday: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            image: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  metric: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TUnion<
      [
        ...(
          | import('@sinclair/typebox').TLiteral<'read'>
          | import('@sinclair/typebox').TLiteral<'read-optional'>
          | import('@sinclair/typebox').TLiteral<'write'>
          | import('@sinclair/typebox').TLiteral<'write-or-read'>
          | import('@sinclair/typebox').TLiteral<'write-optional'>
        )[],
        import('@sinclair/typebox').TObject<
          {
            event: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
            eventSubscription: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          } & {
            all: import('@sinclair/typebox').TOptional<
              import('@sinclair/typebox').TUnion<
                (
                  | import('@sinclair/typebox').TLiteral<'read'>
                  | import('@sinclair/typebox').TLiteral<'read-optional'>
                  | import('@sinclair/typebox').TLiteral<'write'>
                  | import('@sinclair/typebox').TLiteral<'write-or-read'>
                  | import('@sinclair/typebox').TLiteral<'write-optional'>
                )[]
              >
            >
          }
        >,
      ]
    >
  >
  storage: import('@sinclair/typebox').TOptional<
    import('@sinclair/typebox').TObject<{
      fullAccountAccess: import('@sinclair/typebox').TOptional<
        import('@sinclair/typebox').TUnion<
          (import('@sinclair/typebox').TLiteral<'read'> | import('@sinclair/typebox').TLiteral<'read-optional'>)[]
        >
      >
      upload: import('@sinclair/typebox').TOptional<
        import('@sinclair/typebox').TUnion<
          (
            | import('@sinclair/typebox').TLiteral<'write'>
            | import('@sinclair/typebox').TLiteral<'write-or-read'>
            | import('@sinclair/typebox').TLiteral<'write-optional'>
          )[]
        >
      >
    }>
  >
}>
export declare function findApps(ctx: RichUgcCtx, options?: FindAppsOptions): Promise<UgcApp[]>
export declare function findAppById(ctx: RichUgcCtx, appId: number): Promise<UgcApp | null>
export declare function findAppBySlug(ctx: RichUgcCtx, slug: string): Promise<UgcApp | null>
export declare function updateApp(ctx: RichUgcCtx, patch: UgcAppPatch): Promise<UgcApp>
export declare function getAppPermissionRequirementsSchema(ctx: RichUgcCtx): Promise<AppPermissionRequirementsSchema>
export declare function syncAppPermissionRequirementsToCurrentInstallations(
  ctx: RichUgcCtx,
  appId: number,
): Promise<void>

export { UgcApp as App }

export {}
